Terminals unused in grammar

   IN


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Function Program

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    4 Declaration: Identifiers COLON INTEGER
    5            | Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 Declarations: %empty
    7             | Declaration SEMICOLON Declarations

    8 Identifiers: Ident
    9            | Ident COMMA Identifiers

   10 Statements: Statement SEMICOLON Statements
   11           | Statement SEMICOLON

   12 Statement: Var ASSIGN Expression
   13          | IF BoolExp THEN Statements ElseStatement ENDIF
   14          | WHILE BoolExp BEGINLOOP Statements ENDLOOP
   15          | DO BEGINLOOP Statements ENDLOOP WHILE BoolExp
   16          | READ Vars
   17          | WRITE Vars
   18          | CONTINUE
   19          | RETURN Expression

   20 ElseStatement: %empty
   21              | ELSE Statements

   22 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   23    | Ident

   24 Vars: Var
   25     | Var COMMA Vars

   26 Expression: MultExp
   27           | MultExp ADD Expression
   28           | MultExp SUB Expression

   29 Expressions: %empty
   30            | Expression COMMA Expressions
   31            | Expression

   32 MultExp: Term
   33        | Term MULT MultExp
   34        | Term DIV MultExp
   35        | Term MOD MultExp

   36 Term: Var
   37     | SUB Var
   38     | NUMBER
   39     | SUB NUMBER
   40     | L_PAREN Expression R_PAREN
   41     | SUB L_PAREN Expression R_PAREN
   42     | Ident L_PAREN Expressions R_PAREN

   43 BoolExp: Regxp
   44        | Regxp OR BoolExp

   45 Regxp: RegLoopxp
   46      | RegLoopxp AND Regxp

   47 RegLoopxp: NOT RegLoopxp1
   48          | RegLoopxp1

   49 RegLoopxp1: Expression Comp Expression
   50           | TRUE
   51           | FALSE
   52           | L_PAREN BoolExp R_PAREN

   53 Comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 Ident: IDENT

   60 FunctionIdent: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 59 60
NUMBER (259) 5 38 39
FUNCTION (260) 3
BEGIN_PARAMS (261) 3
END_PARAMS (262) 3
BEGIN_LOCALS (263) 3
END_LOCALS (264) 3
BEGIN_BODY (265) 3
END_BODY (266) 3
INTEGER (267) 4 5
ARRAY (268) 5
OF (269) 5
IF (270) 13
THEN (271) 13
ENDIF (272) 13
ELSE (273) 21
WHILE (274) 14 15
DO (275) 15
IN (276)
BEGINLOOP (277) 14 15
ENDLOOP (278) 14 15
CONTINUE (279) 18
READ (280) 16
WRITE (281) 17
TRUE (282) 50
FALSE (283) 51
RETURN (284) 19
L_PAREN (285) 40 41 42 52
R_PAREN (286) 40 41 42 52
L_SQUARE_BRACKET (287) 5 22
R_SQUARE_BRACKET (288) 5 22
COLON (289) 4 5
SEMICOLON (290) 3 7 10 11
COMMA (291) 9 25 30
ASSIGN (292) 12
EQ (293) 53
NEQ (294) 54
LT (295) 55
GT (296) 56
LTE (297) 57
GTE (298) 58
ADD (299) 27
SUB (300) 28 37 39 41
MULT (301) 33
DIV (302) 34
MOD (303) 35
AND (304) 46
OR (305) 44
NOT (306) 47


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0 2
Function (54)
    on left: 3, on right: 2
Declaration (55)
    on left: 4 5, on right: 7
Declarations (56)
    on left: 6 7, on right: 3 7
Identifiers (57)
    on left: 8 9, on right: 4 5 9
Statements (58)
    on left: 10 11, on right: 3 10 13 14 15 21
Statement (59)
    on left: 12 13 14 15 16 17 18 19, on right: 10 11
ElseStatement (60)
    on left: 20 21, on right: 13
Var (61)
    on left: 22 23, on right: 12 24 25 36 37
Vars (62)
    on left: 24 25, on right: 16 17 25
Expression (63)
    on left: 26 27 28, on right: 12 19 22 27 28 30 31 40 41 49
Expressions (64)
    on left: 29 30 31, on right: 30 42
MultExp (65)
    on left: 32 33 34 35, on right: 26 27 28 33 34 35
Term (66)
    on left: 36 37 38 39 40 41 42, on right: 32 33 34 35
BoolExp (67)
    on left: 43 44, on right: 13 14 15 44 52
Regxp (68)
    on left: 45 46, on right: 43 44 46
RegLoopxp (69)
    on left: 47 48, on right: 45 46
RegLoopxp1 (70)
    on left: 49 50 51 52, on right: 47 48
Comp (71)
    on left: 53 54 55 56 57 58, on right: 49
Ident (72)
    on left: 59, on right: 8 9 22 23 42
FunctionIdent (73)
    on left: 60, on right: 3


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    3 Function: FUNCTION . FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 4

    FunctionIdent  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


State 4

   60 FunctionIdent: IDENT .

    $default  reduce using rule 60 (FunctionIdent)


State 5

    3 Function: FUNCTION FunctionIdent . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 Function: FUNCTION FunctionIdent SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 12
    Identifiers   go to state 13
    Ident         go to state 14


State 10

   59 Ident: IDENT .

    $default  reduce using rule 59 (Ident)


State 11

    7 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 12

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    4 Declaration: Identifiers . COLON INTEGER
    5            | Identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    8 Identifiers: Ident .
    9            | Ident . COMMA Identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (Identifiers)


State 15

    7 Declarations: Declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 19
    Identifiers   go to state 13
    Ident         go to state 14


State 16

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    4 Declaration: Identifiers COLON . INTEGER
    5            | Identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

    9 Identifiers: Ident COMMA . Identifiers

    IDENT  shift, and go to state 10

    Identifiers  go to state 23
    Ident        go to state 14


State 19

    7 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 7 (Declarations)


State 20

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declarations)

    Declaration   go to state 11
    Declarations  go to state 24
    Identifiers   go to state 13
    Ident         go to state 14


State 21

    4 Declaration: Identifiers COLON INTEGER .

    $default  reduce using rule 4 (Declaration)


State 22

    5 Declaration: Identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    9 Identifiers: Ident COMMA Identifiers .

    $default  reduce using rule 9 (Identifiers)


State 24

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statements  go to state 37
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 29

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   13 Statement: IF . BoolExp THEN Statements ElseStatement ENDIF

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    BoolExp     go to state 52
    Regxp       go to state 53
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 31

   14 Statement: WHILE . BoolExp BEGINLOOP Statements ENDLOOP

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    BoolExp     go to state 57
    Regxp       go to state 53
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 32

   15 Statement: DO . BEGINLOOP Statements ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 58


State 33

   18 Statement: CONTINUE .

    $default  reduce using rule 18 (Statement)


State 34

   16 Statement: READ . Vars

    IDENT  shift, and go to state 10

    Var    go to state 59
    Vars   go to state 60
    Ident  go to state 40


State 35

   17 Statement: WRITE . Vars

    IDENT  shift, and go to state 10

    Var    go to state 59
    Vars   go to state 61
    Ident  go to state 40


State 36

   19 Statement: RETURN . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 63
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 37

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 64


State 38

   10 Statements: Statement . SEMICOLON Statements
   11           | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 39

   12 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 66


State 40

   22 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   23    | Ident .

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 23 (Var)


State 41

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


State 42

   38 Term: NUMBER .

    $default  reduce using rule 38 (Term)


State 43

   50 RegLoopxp1: TRUE .

    $default  reduce using rule 50 (RegLoopxp1)


State 44

   51 RegLoopxp1: FALSE .

    $default  reduce using rule 51 (RegLoopxp1)


State 45

   40 Term: L_PAREN . Expression R_PAREN
   52 RegLoopxp1: L_PAREN . BoolExp R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 69
    MultExp     go to state 50
    Term        go to state 51
    BoolExp     go to state 70
    Regxp       go to state 53
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 46

   37 Term: SUB . Var
   39     | SUB . NUMBER
   41     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 71
    L_PAREN  shift, and go to state 72

    Var    go to state 73
    Ident  go to state 40


State 47

   47 RegLoopxp: NOT . RegLoopxp1

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    RegLoopxp1  go to state 74
    Ident       go to state 56


State 48

   36 Term: Var .

    $default  reduce using rule 36 (Term)


State 49

   49 RegLoopxp1: Expression . Comp Expression

    EQ   shift, and go to state 75
    NEQ  shift, and go to state 76
    LT   shift, and go to state 77
    GT   shift, and go to state 78
    LTE  shift, and go to state 79
    GTE  shift, and go to state 80

    Comp  go to state 81


State 50

   26 Expression: MultExp .
   27           | MultExp . ADD Expression
   28           | MultExp . SUB Expression

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 26 (Expression)


State 51

   32 MultExp: Term .
   33        | Term . MULT MultExp
   34        | Term . DIV MultExp
   35        | Term . MOD MultExp

    MULT  shift, and go to state 84
    DIV   shift, and go to state 85
    MOD   shift, and go to state 86

    $default  reduce using rule 32 (MultExp)


State 52

   13 Statement: IF BoolExp . THEN Statements ElseStatement ENDIF

    THEN  shift, and go to state 87


State 53

   43 BoolExp: Regxp .
   44        | Regxp . OR BoolExp

    OR  shift, and go to state 88

    $default  reduce using rule 43 (BoolExp)


State 54

   45 Regxp: RegLoopxp .
   46      | RegLoopxp . AND Regxp

    AND  shift, and go to state 89

    $default  reduce using rule 45 (Regxp)


State 55

   48 RegLoopxp: RegLoopxp1 .

    $default  reduce using rule 48 (RegLoopxp)


State 56

   22 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   23    | Ident .
   42 Term: Ident . L_PAREN Expressions R_PAREN

    L_PAREN           shift, and go to state 90
    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 23 (Var)


State 57

   14 Statement: WHILE BoolExp . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 91


State 58

   15 Statement: DO BEGINLOOP . Statements ENDLOOP WHILE BoolExp

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statements  go to state 92
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 59

   24 Vars: Var .
   25     | Var . COMMA Vars

    COMMA  shift, and go to state 93

    $default  reduce using rule 24 (Vars)


State 60

   16 Statement: READ Vars .

    $default  reduce using rule 16 (Statement)


State 61

   17 Statement: WRITE Vars .

    $default  reduce using rule 17 (Statement)


State 62

   40 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 94
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 63

   19 Statement: RETURN Expression .

    $default  reduce using rule 19 (Statement)


State 64

    3 Function: FUNCTION FunctionIdent SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 3 (Function)


State 65

   10 Statements: Statement SEMICOLON . Statements
   11           | Statement SEMICOLON .

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    $default  reduce using rule 11 (Statements)

    Statements  go to state 95
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 66

   12 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 96
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 67

   22 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 97
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 68

    5 Declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (Declaration)


State 69

   40 Term: L_PAREN Expression . R_PAREN
   49 RegLoopxp1: Expression . Comp Expression

    R_PAREN  shift, and go to state 98
    EQ       shift, and go to state 75
    NEQ      shift, and go to state 76
    LT       shift, and go to state 77
    GT       shift, and go to state 78
    LTE      shift, and go to state 79
    GTE      shift, and go to state 80

    Comp  go to state 81


State 70

   52 RegLoopxp1: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 99


State 71

   39 Term: SUB NUMBER .

    $default  reduce using rule 39 (Term)


State 72

   41 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 100
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 73

   37 Term: SUB Var .

    $default  reduce using rule 37 (Term)


State 74

   47 RegLoopxp: NOT RegLoopxp1 .

    $default  reduce using rule 47 (RegLoopxp)


State 75

   53 Comp: EQ .

    $default  reduce using rule 53 (Comp)


State 76

   54 Comp: NEQ .

    $default  reduce using rule 54 (Comp)


State 77

   55 Comp: LT .

    $default  reduce using rule 55 (Comp)


State 78

   56 Comp: GT .

    $default  reduce using rule 56 (Comp)


State 79

   57 Comp: LTE .

    $default  reduce using rule 57 (Comp)


State 80

   58 Comp: GTE .

    $default  reduce using rule 58 (Comp)


State 81

   49 RegLoopxp1: Expression Comp . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 101
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 82

   27 Expression: MultExp ADD . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 102
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 83

   28 Expression: MultExp SUB . Expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var         go to state 48
    Expression  go to state 103
    MultExp     go to state 50
    Term        go to state 51
    Ident       go to state 56


State 84

   33 MultExp: Term MULT . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var      go to state 48
    MultExp  go to state 104
    Term     go to state 51
    Ident    go to state 56


State 85

   34 MultExp: Term DIV . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var      go to state 48
    MultExp  go to state 105
    Term     go to state 51
    Ident    go to state 56


State 86

   35 MultExp: Term MOD . MultExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    Var      go to state 48
    MultExp  go to state 106
    Term     go to state 51
    Ident    go to state 56


State 87

   13 Statement: IF BoolExp THEN . Statements ElseStatement ENDIF

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statements  go to state 107
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 88

   44 BoolExp: Regxp OR . BoolExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    BoolExp     go to state 108
    Regxp       go to state 53
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 89

   46 Regxp: RegLoopxp AND . Regxp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    Regxp       go to state 109
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 90

   42 Term: Ident L_PAREN . Expressions R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    $default  reduce using rule 29 (Expressions)

    Var          go to state 48
    Expression   go to state 110
    Expressions  go to state 111
    MultExp      go to state 50
    Term         go to state 51
    Ident        go to state 56


State 91

   14 Statement: WHILE BoolExp BEGINLOOP . Statements ENDLOOP

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statements  go to state 112
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 92

   15 Statement: DO BEGINLOOP Statements . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 113


State 93

   25 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 10

    Var    go to state 59
    Vars   go to state 114
    Ident  go to state 40


State 94

   40 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 98


State 95

   10 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 10 (Statements)


State 96

   12 Statement: Var ASSIGN Expression .

    $default  reduce using rule 12 (Statement)


State 97

   22 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 115


State 98

   40 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 40 (Term)


State 99

   52 RegLoopxp1: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 52 (RegLoopxp1)


State 100

   41 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 116


State 101

   49 RegLoopxp1: Expression Comp Expression .

    $default  reduce using rule 49 (RegLoopxp1)


State 102

   27 Expression: MultExp ADD Expression .

    $default  reduce using rule 27 (Expression)


State 103

   28 Expression: MultExp SUB Expression .

    $default  reduce using rule 28 (Expression)


State 104

   33 MultExp: Term MULT MultExp .

    $default  reduce using rule 33 (MultExp)


State 105

   34 MultExp: Term DIV MultExp .

    $default  reduce using rule 34 (MultExp)


State 106

   35 MultExp: Term MOD MultExp .

    $default  reduce using rule 35 (MultExp)


State 107

   13 Statement: IF BoolExp THEN Statements . ElseStatement ENDIF

    ELSE  shift, and go to state 117

    $default  reduce using rule 20 (ElseStatement)

    ElseStatement  go to state 118


State 108

   44 BoolExp: Regxp OR BoolExp .

    $default  reduce using rule 44 (BoolExp)


State 109

   46 Regxp: RegLoopxp AND Regxp .

    $default  reduce using rule 46 (Regxp)


State 110

   30 Expressions: Expression . COMMA Expressions
   31            | Expression .

    COMMA  shift, and go to state 119

    $default  reduce using rule 31 (Expressions)


State 111

   42 Term: Ident L_PAREN Expressions . R_PAREN

    R_PAREN  shift, and go to state 120


State 112

   14 Statement: WHILE BoolExp BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 121


State 113

   15 Statement: DO BEGINLOOP Statements ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 122


State 114

   25 Vars: Var COMMA Vars .

    $default  reduce using rule 25 (Vars)


State 115

   22 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 22 (Var)


State 116

   41 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 41 (Term)


State 117

   21 ElseStatement: ELSE . Statements

    IDENT     shift, and go to state 10
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statements  go to state 123
    Statement   go to state 38
    Var         go to state 39
    Ident       go to state 40


State 118

   13 Statement: IF BoolExp THEN Statements ElseStatement . ENDIF

    ENDIF  shift, and go to state 124


State 119

   30 Expressions: Expression COMMA . Expressions

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 46

    $default  reduce using rule 29 (Expressions)

    Var          go to state 48
    Expression   go to state 110
    Expressions  go to state 125
    MultExp      go to state 50
    Term         go to state 51
    Ident        go to state 56


State 120

   42 Term: Ident L_PAREN Expressions R_PAREN .

    $default  reduce using rule 42 (Term)


State 121

   14 Statement: WHILE BoolExp BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 14 (Statement)


State 122

   15 Statement: DO BEGINLOOP Statements ENDLOOP WHILE . BoolExp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    Var         go to state 48
    Expression  go to state 49
    MultExp     go to state 50
    Term        go to state 51
    BoolExp     go to state 126
    Regxp       go to state 53
    RegLoopxp   go to state 54
    RegLoopxp1  go to state 55
    Ident       go to state 56


State 123

   21 ElseStatement: ELSE Statements .

    $default  reduce using rule 21 (ElseStatement)


State 124

   13 Statement: IF BoolExp THEN Statements ElseStatement ENDIF .

    $default  reduce using rule 13 (Statement)


State 125

   30 Expressions: Expression COMMA Expressions .

    $default  reduce using rule 30 (Expressions)


State 126

   15 Statement: DO BEGINLOOP Statements ENDLOOP WHILE BoolExp .

    $default  reduce using rule 15 (Statement)
